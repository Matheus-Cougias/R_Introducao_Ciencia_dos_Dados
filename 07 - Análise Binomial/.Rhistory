yhat <- rep(NA, nrow(dados))
for(cont in 1:nrow(dados2)){
modelo <- lm(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2[-cont,])
yhat[cont] <- predict(modelo, newdata=dados2[cont,])
}
plot(yhat ~ y, pch=19, col="blue")
abline(a=0, b=1, lwd=2, col="red")
R2pred <- 1 - sum( (y-yhat)^2 )/sum( (y-mean(y))^2 )
print(R2pred)
modelo <- rpart(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2)
rpart.plot(modelo)
y    <- dados2$logPMSO
yhat <- rep(NA, nrow(dados2))
for(cont in 1:nrow(dados2)){
modelo <- rpart(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2[-cont,],
control = rpart.control(maxdepth=2))
yhat[cont] <- predict(modelo, newdata=dados2[cont,])
}
plot(yhat ~ y, pch=19, col="blue")
abline(a=0, b=1, lwd=2, col="red")
R2pred <- 1 - sum( (y-yhat)^2 )/sum( (y-mean(y))^2 )
print(R2pred)
y    <- dados2$logPMSO
yhat <- rep(NA, nrow(dados))
for(cont in 1:nrow(dados2)){
modelo <- lm(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2[-cont,])
yhat[cont] <- predict(modelo, newdata=dados2[cont,])
}
plot(yhat ~ y, pch=19, col="blue")
abline(a=0, b=1, lwd=2, col="red")
R2pred <- 1 - sum( (y-yhat)^2 )/sum( (y-mean(y))^2 )
print(R2pred)
modelo <- rpart(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2)
rpart.plot(modelo)
y    <- dados2$logPMSO
yhat <- rep(NA, nrow(dados2))
for(cont in 1:nrow(dados2)){
modelo <- rpart(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2[-cont,],
control = rpart.control(maxdepth=5))
yhat[cont] <- predict(modelo, newdata=dados2[cont,])
}
plot(yhat ~ y, pch=19, col="blue")
abline(a=0, b=1, lwd=2, col="red")
R2pred <- 1 - sum( (y-yhat)^2 )/sum( (y-mean(y))^2 )
print(R2pred)
y    <- dados2$logPMSO
yhat <- rep(NA, nrow(dados))
for(cont in 1:nrow(dados2)){
modelo <- lm(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2[-cont,])
yhat[cont] <- predict(modelo, newdata=dados2[cont,])
}
plot(yhat ~ y, pch=19, col="blue")
abline(a=0, b=1, lwd=2, col="red")
R2pred <- 1 - sum( (y-yhat)^2 )/sum( (y-mean(y))^2 )
print(R2pred)
modelo <- rpart(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2)
rpart.plot(modelo)
y    <- dados2$logPMSO
yhat <- rep(NA, nrow(dados2))
for(cont in 1:nrow(dados2)){
modelo <- rpart(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2[-cont,],
control = rpart.control(maxdepth=6))
yhat[cont] <- predict(modelo, newdata=dados2[cont,])
}
plot(yhat ~ y, pch=19, col="blue")
abline(a=0, b=1, lwd=2, col="red")
R2pred <- 1 - sum( (y-yhat)^2 )/sum( (y-mean(y))^2 )
print(R2pred)
y    <- dados2$logPMSO
yhat <- rep(NA, nrow(dados))
for(cont in 1:nrow(dados2)){
modelo <- lm(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2[-cont,])
yhat[cont] <- predict(modelo, newdata=dados2[cont,])
}
plot(yhat ~ y, pch=19, col="blue")
abline(a=0, b=1, lwd=2, col="red")
R2pred <- 1 - sum( (y-yhat)^2 )/sum( (y-mean(y))^2 )
print(R2pred)
modelo <- rpart(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2)
rpart.plot(modelo)
y    <- dados2$logPMSO
yhat <- rep(NA, nrow(dados2))
for(cont in 1:nrow(dados2)){
modelo <- rpart(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2[-cont,],
control = rpart.control(maxdepth=4))
yhat[cont] <- predict(modelo, newdata=dados2[cont,])
}
plot(yhat ~ y, pch=19, col="blue")
abline(a=0, b=1, lwd=2, col="red")
R2pred <- 1 - sum( (y-yhat)^2 )/sum( (y-mean(y))^2 )
print(R2pred)
y    <- dados2$logPMSO
yhat <- rep(NA, nrow(dados))
for(cont in 1:nrow(dados2)){
modelo <- lm(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2[-cont,])
yhat[cont] <- predict(modelo, newdata=dados2[cont,])
}
plot(yhat ~ y, pch=19, col="blue")
abline(a=0, b=1, lwd=2, col="red")
R2pred <- 1 - sum( (y-yhat)^2 )/sum( (y-mean(y))^2 )
print(R2pred)
modelo <- rpart(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2)
rpart.plot(modelo)
y    <- dados2$logPMSO
yhat <- rep(NA, nrow(dados2))
for(cont in 1:nrow(dados2)){
modelo <- rpart(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2[-cont,],
control = rpart.control(maxdepth=3))
yhat[cont] <- predict(modelo, newdata=dados2[cont,])
}
plot(yhat ~ y, pch=19, col="blue")
abline(a=0, b=1, lwd=2, col="red")
R2pred <- 1 - sum( (y-yhat)^2 )/sum( (y-mean(y))^2 )
print(R2pred)
y    <- dados2$logPMSO
yhat <- rep(NA, nrow(dados))
for(cont in 1:nrow(dados2)){
modelo <- lm(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2[-cont,])
yhat[cont] <- predict(modelo, newdata=dados2[cont,])
}
plot(yhat ~ y, pch=19, col="blue")
abline(a=0, b=1, lwd=2, col="red")
R2pred <- 1 - sum( (y-yhat)^2 )/sum( (y-mean(y))^2 )
print(R2pred)
modelo <- rpart(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2)
rpart.plot(modelo)
y    <- dados2$logPMSO
yhat <- rep(NA, nrow(dados2))
for(cont in 1:nrow(dados2)){
modelo <- rpart(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2[-cont,],
control = rpart.control(maxdepth=2))
yhat[cont] <- predict(modelo, newdata=dados2[cont,])
}
plot(yhat ~ y, pch=19, col="blue")
abline(a=0, b=1, lwd=2, col="red")
R2pred <- 1 - sum( (y-yhat)^2 )/sum( (y-mean(y))^2 )
print(R2pred)
y    <- dados2$logPMSO
yhat <- rep(NA, nrow(dados))
for(cont in 1:nrow(dados2)){
modelo <- lm(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2[-cont,])
yhat[cont] <- predict(modelo, newdata=dados2[cont,])
}
plot(yhat ~ y, pch=19, col="blue")
abline(a=0, b=1, lwd=2, col="red")
R2pred <- 1 - sum( (y-yhat)^2 )/sum( (y-mean(y))^2 )
print(R2pred)
modelo <- rpart(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2)
rpart.plot(modelo)
y    <- dados2$logPMSO
yhat <- rep(NA, nrow(dados2))
for(cont in 1:nrow(dados2)){
modelo <- rpart(logPMSO ~ rsub + rdist_a + cons + PNTaj + CHIaj + logralta + logmponderado + logcons, data=dados2[-cont,],
control = rpart.control(maxdepth=3))
yhat[cont] <- predict(modelo, newdata=dados2[cont,])
}
plot(yhat ~ y, pch=19, col="blue")
abline(a=0, b=1, lwd=2, col="red")
R2pred <- 1 - sum( (y-yhat)^2 )/sum( (y-mean(y))^2 )
print(R2pred)
knitr::opts_chunk$set(echo = FALSE)
require(readr)
require(pROC)
require(rpart)
require(rpart.plot)
require(randomForest)
require(dplyr)
#occupancy <- read.csv("datatraining.txt")[,-1]
adult <- read_csv("adult.data", col_names = FALSE)
adult <- adult[-19610,]
adult=adult %>% mutate_if(is.character, as.factor)
colnames(adult) <- c('Idade', 'Trabalho', 'Fnlwgt', 'Escolaridade', 'Num_escolaridade', 'Est_Civil', 'Profissao', 'Relacionamento', 'Cor',
'Sexo', 'Ganhos', 'Perdas', 'Horas_semanais', 'Pais', 'Renda')
#plot(Idade ~ Renda, data=adult)
#plot(Renda ~ Trabalho, data=adult)
#plot(Fnlwgt ~ Renda, data=adult)
#plot(Renda ~ Escolaridade, data=adult)
#plot(Num_escolaridade ~ Renda, data=adult)
#plot(Renda ~ Est_Civil, data=adult)
#plot(Renda ~ Profissao, data=adult)
#plot(Renda ~ Relacionamento, data=adult)
#plot(Renda ~ Cor, data=adult)
#plot(Renda ~ Sexo, data=adult)
#plot(Ganhos ~ Renda, data=adult)
#plot(Perdas ~ Renda, data=adult)
#plot(Horas_semanais ~ Renda, data=adult)
#plot(Renda ~ Pais, data=adult)
table(dados$Renda)/sum( table(dados$Renda) )
#plot(Idade ~ Renda, data=adult)
#plot(Renda ~ Trabalho, data=adult)
#plot(Fnlwgt ~ Renda, data=adult)
#plot(Renda ~ Escolaridade, data=adult)
#plot(Num_escolaridade ~ Renda, data=adult)
#plot(Renda ~ Est_Civil, data=adult)
#plot(Renda ~ Profissao, data=adult)
#plot(Renda ~ Relacionamento, data=adult)
#plot(Renda ~ Cor, data=adult)
#plot(Renda ~ Sexo, data=adult)
#plot(Ganhos ~ Renda, data=adult)
#plot(Perdas ~ Renda, data=adult)
#plot(Horas_semanais ~ Renda, data=adult)
#plot(Renda ~ Pais, data=adult)
table(adult$Renda)/sum( table(adult$Renda) )
dadosadul <- adult
dadosadul <- dadosadul[dadosadul$Pais != " Holand-Netherlands" ,]
modeloLog <- glm(Renda ~ ., family=binomial, data=dadosadul)
summary(modeloLog)
dadosadul <- adult
dadosadul <- dadosadul[dadosadul$Pais != " Holand-Netherlands" ,]
modeloLog <- glm(Renda ~ ., family=binomial, data=dadosadul)
modeloLog <- step(modeloLog)
summary(modeloLog)
curvaLog <- roc(modeloLog$y, predict(modeloLog, type="response") )
plot(curvaLog, col="red")
areaLog <- curvaLog$auc
curvaLog <- roc(modeloLog$y, predict(modeloLog, type="response") )
plot(curvaLog, col="red")
curvaLog <- roc(modeloLog$y, predict(modeloLog, type="response") )
curvaLog$auc
folds <- cut( seq(1,nrow(dadosadul)), breaks=10, labels=FALSE)
folds <- sample(folds, size=length(folds))
Ypredict <- rep(NA, nrow(dadosadul))
for(fld in 1:2){
testIndexes <- which(folds==fld, arr.ind=TRUE)
modelo <- glm(Renda ~ ., family=binomial, data=dadosadul[-testIndexes,])
Ypredict[testIndexes] <- predict(modelo, newdata=dadosadul[testIndexes,], type="response")
}
for(fld in 1:2){
testIndexes <- which(folds==fld, arr.ind=TRUE)
modelo <- glm(Renda ~ ., family=binomial, data=dadosadul[-testIndexes,])
Ypredict[testIndexes] <- predict(modelo, newdata=dadosadul[testIndexes,], type="response")
}
roc(dadosadul$Renda, Ypredict)$auc
dadosadul <- adult
dadosadul <- dadosadul[dadosadul$Pais != " Holand-Netherlands" ,]
modeloLog <- glm(Renda ~ ., family=binomial, data=dadosadul)
modeloLog <- step(modeloLog)
curvaLog <- roc(modeloLog$Renda, predict(modeloLog, type="response") )
curvaLog <- roc(modeloLog$Renda, predict(modeloLog) )
curvaLog <- roc(modeloLog$y, predict(modeloLog) )
curvaLog <- roc(modeloLog, predict(modeloLog) )
curvaLog <- roc(modeloLog$y, predict(modeloLog, type="response") )
curvaLog <- roc(modeloLog$Renda, predict(modeloLog, type="response") )
curvaLog <- roc(modeloLog$Renda, predict(modeloLog))
curvaLog <- roc(modeloLog$Renda, predict(modeloLog, type="response") )
curvaLog <- roc(modeloLog$y, predict(modeloLog, type="response") )
plot(curvaLog, col="red")
curvaLog$auc
plot(curvaLog, col="red")
curvaLog$auc
Ypredict <- rep(NA, nrow(dadosadul))
for(fld in 1:2){
testIndexes <- which(folds==fld, arr.ind=TRUE)
modeloRF <- randomForest(as.factor(Renda) ~ ., data=dadosadul[-testIndexes,])
Ypredict[testIndexes] <- predict(modeloRF, newdata=dadosadul[testIndexes,], type="prob")[,1]
}
Ypredict <- rep(NA, nrow(dadosadul))
for(fld in 1:2){
testIndexes <- which(folds==fld, arr.ind=TRUE)
modeloRF <- randomForest(as.factor(Renda) ~ ., data=dadosadul[-testIndexes,])
Ypredict[testIndexes] <- predict(modeloRF, newdata=dadosadul[testIndexes,], type="prob")[,1]
}
curvaRandom <- roc(dadosadul$Renda, Ypredict)
plot(curvaRandom, col="red")
curvaRandom$auc
Ypredict <- rep(NA, nrow(dadosadul))
for(fld in 1:2){
testIndexes <- which(folds==fld, arr.ind=TRUE)
modeloCART <- rpart(as.factor(Renda) ~ ., data=dadosadul[-testIndexes,])
Ypredict[testIndexes] <- predict(modeloCART, newdata=dadosadul[testIndexes,], type="prob")[,1]
}
for(fld in 1:2){
testIndexes <- which(folds==fld, arr.ind=TRUE)
modeloCART <- rpart(as.factor(Renda) ~ ., data=dadosadul[-testIndexes,])
Ypredict[testIndexes] <- predict(modeloCART, newdata=dadosadul[testIndexes,], type="prob")[,1]
}
curvaClass <- roc(dadosadul$Renda, Ypredict)
curvaClass <- roc(dadosadul$Renda, Ypredict)
plot(curvaClass, col="red")
curvaClass$auc
set.seed(1234)
modeloRandom <- randomForest(Renda ~ .-Num_escolaridade, family=binomial, data=dadosadul)
set.seed(1234)
modeloRandom <- randomForest(Renda ~ .-Num_escolaridade, family=binomial, data=dadosadul)
curvaRandom <- roc(dadosadul$y, predict(modFit, type="prob")[,2] )
set.seed(1234)
modeloRandom <- randomForest(Renda ~ .-Num_escolaridade, family=binomial, data=dadosadul)
curvaRandom <- roc(dadosadul$y, predict(modeloRandom, type="prob")[,2] )
set.seed(1234)
modeloRandom <- randomForest(Renda ~ .-Num_escolaridade, family=binomial, data=dadosadul)
View(modeloRandom)
View(modeloRandom)
curvaRandom <- roc(dadosadul$Renda, predict(modeloRandom, type="prob")[,2] )
plot(curvaRandom, col="dark green")
curvaRandom$auc
knitr::opts_chunk$set(echo = FALSE)
require(readr)
require(pROC)
require(rpart)
require(rpart.plot)
require(randomForest)
require(dplyr)
#occupancy <- read.csv("datatraining.txt")[,-1]
adult <- read_csv("adult.data", col_names = FALSE)
adult <- adult[-19610,]
adult=adult %>% mutate_if(is.character, as.factor)
colnames(adult) <- c('Idade', 'Trabalho', 'Fnlwgt', 'Escolaridade', 'Num_escolaridade', 'Est_Civil', 'Profissao', 'Relacionamento', 'Cor',
'Sexo', 'Ganhos', 'Perdas', 'Horas_semanais', 'Pais', 'Renda')
#plot(Idade ~ Renda, data=adult)
#plot(Renda ~ Trabalho, data=adult)
#plot(Fnlwgt ~ Renda, data=adult)
#plot(Renda ~ Escolaridade, data=adult)
#plot(Num_escolaridade ~ Renda, data=adult)
#plot(Renda ~ Est_Civil, data=adult)
#plot(Renda ~ Profissao, data=adult)
#plot(Renda ~ Relacionamento, data=adult)
#plot(Renda ~ Cor, data=adult)
#plot(Renda ~ Sexo, data=adult)
#plot(Ganhos ~ Renda, data=adult)
#plot(Perdas ~ Renda, data=adult)
#plot(Horas_semanais ~ Renda, data=adult)
#plot(Renda ~ Pais, data=adult)
table(adult$Renda)/sum( table(adult$Renda) )
dadosadul <- adult
dadosadul <- dadosadul[dadosadul$Pais != " Holand-Netherlands" ,]
modeloLog <- glm(Renda ~ .-Num_escolaridade, family=binomial, data=dadosadul)
#modeloLog <- step(modeloLog)
curvaLog <- roc(modeloLog$y, predict(modeloLog, type="response") )
plot(curvaLog, col="red")
curvaLog$auc
folds <- cut( seq(1,nrow(dadosadul)), breaks=10, labels=FALSE)
folds <- sample(folds, size=length(folds))
Ypredict <- rep(NA, nrow(dadosadul))
for(fld in 1:2){
testIndexes <- which(folds==fld, arr.ind=TRUE)
modelo <- glm(Renda ~ ., family=binomial, data=dadosadul[-testIndexes,])
Ypredict[testIndexes] <- predict(modelo, newdata=dadosadul[testIndexes,], type="response")
}
roc(dadosadul$Renda, Ypredict)$auc
set.seed(1234)
modeloRandom <- randomForest(Renda ~ .-Num_escolaridade, family=binomial, data=dadosadul)
curvaRandom <- roc(dadosadul$Renda, predict(modeloRandom, type="prob")[,2] )
plot(curvaRandom, col="dark green")
curvaRandom$auc
Ypredict <- rep(NA, nrow(dadosadul))
for(fld in 1:2){
testIndexes <- which(folds==fld, arr.ind=TRUE)
modeloRF <- randomForest(as.factor(Renda) ~ ., data=dadosadul[-testIndexes,])
Ypredict[testIndexes] <- predict(modeloRF, newdata=dadosadul[testIndexes,], type="prob")[,1]
}
curvaValidacaoRandom <- roc(dadosadul$Renda, Ypredict)
curvaValidacaoRandom$auc
knitr::opts_chunk$set(echo = TRUE)
dados <- read.csv("potency.dat", sep="\t")
dados <- read.csv("aviationdeaths.dat", sep="\t")
View(dados)
dados <- read.csv("potency.dat", sep="\t")
dados <- read.csv("aviationdeaths.dat", sep="\t")
dados <- read.csv("aviationdeaths.dat", sep="\t")
#dados <- read.csv("potency.dat", sep="\t")
dados <- read.csv("aviationdeaths.dat", sep="\t")
View(dados)
plot(Deaths ~ as.factor(Year), data=dados)
plot(Deaths ~ Age, data=dados)
plot(Deaths ~ as.factor(Year), data=dados)
#dados <- read.csv("potency.dat", sep="\t")
dados <- read.csv("aviationdeaths.dat", sep="\t")
dados$Age <- as.factor(dados$Age)
plot(Deaths ~ Age, data=dados)
plot(Deaths ~ as.factor(Year), data=dados)
plot(Deaths ~ Age, data=dados)
plot(Deaths/Numbers ~ Age, data=dados)
plot(Deaths ~ as.factor(Year), data=dados)
#plot(Deaths ~ Age, data=dados)
plot(Deaths/Numbers ~ Age, data=dados)
#plot(Deaths ~ as.factor(Year), data=dados)
plot(Deaths/Numbers ~ as.factor(Year), data=dados)
modelo <- glm(cbind(Deaths, Numbers-Deaths) ~ Age + Year, data=dados, family=binomial)
summary(modelo)
#plot(Deaths ~ Age, data=dados)
plot(Deaths/Numbers ~ Age, data=dados)
#plot(Deaths ~ as.factor(Year), data=dados)
plot(Deaths/Numbers ~ as.factor(Year), data=dados)
dados2 <- aggregate(cbind(Deaths, Numbers) ~ Age, FUN=sum())
dados2 <- aggregate(cbind(Deaths, Numbers) ~ Age, FUN=sum, data = dados
dados2 <- aggregate(cbind(Deaths, Numbers) ~ Age, FUN=sum, data = dados)
View(dados2)
dados2 <- aggregate(cbind(Deaths, Numbers) ~ Age, FUN=sum, data = dados)
plot(Deaths/Numbers ~ Age, data=dados2)
dados2 <- aggregate(cbind(Deaths, Numbers) ~ Age, FUN=sum, data = dados)
plot(Deaths/Numbers ~ Age, data=dados2, pch=19, col="red")
dados2 <- aggregate(cbind(Deaths, Numbers) ~ Age, FUN=sum, data = dados)
plot(Deaths/Numbers ~ Year, data=dados2, pch=19, col="red")
dados2 <- aggregate(cbind(Deaths, Numbers) ~ Year, FUN=sum, data = dados)
plot(Deaths/Numbers ~ Year, data=dados2, pch=19, col="red")
knitr::opts_chunk$set(echo = TRUE)
dados <- read.csv("potency.dat", sep="\t")
View(dados)
dados <- read.csv("potency.dat", sep="\t")
dados$Poison <- as.facot(dados$Poison)
dados <- read.csv("potency.dat", sep="\t")
dados$Poison <- as.factor(dados$Poison)
plot(Kill/Number ~ Poison, data=dados)
plot(Kill/Number ~ Poison, data=dados)
plot(Kill/Number ~ LogDose, data=dados)
plot(Kill/Number ~ Poison, data=dados)
plot(Kill/Number ~ LogDose, data=dados, pch=19, cex=1.2, col=c("red", "blue", "black")[dados$Poison])
modelo <- glm(cbind(Kill, Number-Kill) ~ Poison + LogDose, data=dados, family=binomial)
summary(modelo)
modelo <- glm(cbind(Kill, Number-Kill) ~ Poison + (LogDose*10), data=dados, family=binomial)
modelo <- glm(cbind(Kill, Number-Kill) ~ Poison + I(LogDose*10), data=dados, family=binomial)
summary(modelo)
modelo <- glm(cbind(Kill, Number-Kill) ~ Poison + I(LogDose*10) + Poison:I(LogDose*10), data=dados, family=binomial)
summary(modelo)
setwd("C:/Users/mathe/Desktop/UFMG 2020-1/Introdução à Ciência dos Dados Aplicada à Engenharia de Produção/07 - Análise Binomial")
knitr::opts_chunk$set(echo = TRUE)
dados <- read.csv("aviationdeaths.dat", sep="\t")
dados$Age <- as.factor(dados$Age)
#plot(Deaths ~ Age, data=dados)
plot(Deaths/Numbers ~ Age, data=dados)
#plot(Deaths ~ as.factor(Year), data=dados)
plot(Deaths/Numbers ~ as.factor(Year), data=dados)
modelo <- glm(cbind(Deaths, Numbers-Deaths) ~ Age + Year, data=dados, family=binomial)
summary(modelo)
dados2 <- aggregate(cbind(Deaths, Numbers) ~ Year, FUN=sum, data = dados)
plot(Deaths/Numbers ~ Year, data=dados2, pch=19, col="red")
knitr::opts_chunk$set(echo = TRUE)
dados <- read.csv("potency.dat", sep="\t")
dados$Poison <- as.factor(dados$Poison)
plot(Kill/Number ~ Poison, data=dados)
plot(Kill/Number ~ LogDose, data=dados, pch=19, cex=1.2, col=c("red", "blue", "black")[dados$Poison])
modelo <- glm(cbind(Kill, Number-Kill) ~ Poison + I(LogDose*10), data=dados, family=binomial)
summary(modelo)
modelo <- glm(cbind(Kill, Number-Kill) ~ Poison + I(LogDose*10) + Poison:I(LogDose*10), data=dados, family=binomial)
summary(modelo)
knitr::opts_chunk$set(echo = TRUE)
dados <- read.csv("danishlc.dat", sep="\t")
View(dados)
dados <- read.csv("danishlc.dat", sep="\t")
dados$Age <- as.factor(dados$Age)
dados$City <- as.factor(dados$City)
dados <- read.csv("danishlc.dat", sep="\t")
dados$Age <- as.factor(dados$Age)
dados$City <- as.factor(dados$City)
dados$Prop <- dados$Cases/dados$Pop
plot(Prop ~ Age, data=dados)
plot(Prop ~ City, data=dados)
dados <- read.csv("danishlc.dat", sep="\t")
dados$Age <- as.factor(dados$Age,
levels = c("40-54", "55-59", "60-64", "65-69", "70-74", ">74"))
dados <- read.csv("danishlc.dat", sep="\t")
dados$Age <- factor(dados$Age,
levels = c("40-54", "55-59", "60-64", "65-69", "70-74", ">74"))
dados$City <- as.factor(dados$City)
dados$Prop <- dados$Cases/dados$Pop
plot(Prop ~ Age, data=dados)
plot(Prop ~ City, data=dados)
setwd("C:/Users/mathe/Desktop/UFMG 2020-1/Introdução à Ciência dos Dados Aplicada à Engenharia de Produção/07 - Análise Binomial")
dados <- read.csv("danishlc.dat", sep="\t")
dados$Age <- factor(dados$Age,
levels = c("40-54", "55-59", "60-64", "65-69", "70-74", ">74"))
dados$City <- as.factor(dados$City)
dados$Prop <- dados$Cases/dados$Pop
dados$Diff <- dados$Pop-dados$Cases
plot(Prop ~ Age, data=dados)
plot(Prop ~ City, data=dados)
View(dados)
modelo <- glm(cbind(Cases, Diff) ~ Age + City, data = dados, family = binomial)
summary(modelo)
exp(1.8727)
exp(2.74)
exp(-0.3345)
1/exp(-0.3345)
1/exp(-0.3764)
1/exp(-0.2760)
exp(1.1070)
exp(1.5291)
exp(1.7819)
exp(1.8727)
exp(1.4289)
knitr::opts_chunk$set(echo = TRUE)
dados <- read.csv("danishlc.dat", sep="\t")
dados$Age <- factor(dados$Age,
levels = c("40-54", "55-59", "60-64", "65-69", "70-74", ">74"))
dados$City <- as.factor(dados$City)
dados$Prop <- dados$Cases/dados$Pop
dados$Diff <- dados$Pop-dados$Cases
plot(Prop ~ Age, data=dados)
plot(Prop ~ City, data=dados)
modelo <- glm(cbind(Cases, Diff) ~ Age + City, data = dados, family = binomial)
summary(modelo)
dados$Ite <- dados$Age*dados$City
modelo2 <- glm(cbind(Cases, Diff) ~ Ite, data = dados, family = binomial)
View(dados)
dados$Ite <- I(dados$Age*dados$City)
modelo2 <- glm(cbind(Cases, Diff) ~ Ite, data = dados, family = binomial)
knitr::opts_chunk$set(echo = TRUE)
dados <- read.csv("danishlc.dat", sep="\t")
dados$Age <- factor(dados$Age,
levels = c("40-54", "55-59", "60-64", "65-69", "70-74", ">74"))
dados$City <- as.factor(dados$City)
dados$Prop <- dados$Cases/dados$Pop
dados$Diff <- dados$Pop-dados$Cases
plot(Prop ~ Age, data=dados)
plot(Prop ~ City, data=dados)
modelo <- glm(cbind(Cases, Diff) ~ Age + City, data = dados, family = binomial)
summary(modelo)
modelo2 <- glm(cbind(Cases, Diff) ~ Ite, data = dados, family = binomial)
modelo2 <- glm(cbind(Cases, Diff) ~ Age:City, data = dados, family = binomial)
summary(modelo2)
exp(0.65812)
exp(0.68501)
